sequenceDiagram
    participant CP as Computing Provider
    participant WM as WhitelistManager
    participant NM as NodeManager
    participant NE as NodeEscrow
    participant EM as EpochManager
    participant LM as LeaderManager
    participant JM as JobManager
    participant JE as JobEscrow
    participant IM as IncentiveManager
    participant IT as IncentiveTreasury

%% Onboarding Phase
    Note over CP,IT: 1. Onboarding
    CP->>WM: addCP()
    WM-->>CP: CPAdded event
    CP->>NE: deposit(stake)
    NE-->>CP: Deposited event
    CP->>NM: registerNode(computeRating)
    NM->>WM: requireWhitelisted(cp)
    NM->>NE: requireBalance(cp, stakeRequired)
    NM-->>CP: NodeRegistered event

%% Epoch Commitment Phase
    Note over CP,IT: 2. Epoch Commitment
    CP->>EM: getCurrentEpoch()
    EM-->>CP: epoch
    CP->>LM: submitCommitment(nodeId, commitment)
    LM->>EM: validateEpochState(COMMIT)
    LM->>NM: validateNodeOwner(nodeId, msg.sender)
    LM-->>CP: CommitSubmitted event

%% Secret Reveal Phase
    Note over CP,IT: 3. Secret Reveal
    CP->>LM: revealSecret(nodeId, secret)
    LM->>EM: validateEpochState(REVEAL)
    LM->>NM: validateNodeOwner(nodeId, msg.sender)
    LM-->>CP: SecretRevealed event

%% Leader Election Phase
    Note over CP,IT: 4. Leader Election
    CP->>LM: electLeader()
    LM->>EM: validateEpochState(ELECT)
    LM-->>CP: LeaderElected event

%% Job Assignment Phase
    Note over CP,IT: 5. Job Assignment
    CP->>JM: startAssignmentRound()
    JM->>LM: validateLeader(msg.sender)
    JM->>NM: getNodesInPool(poolId)
    JM->>LM: getNodesWhoRevealed(epoch)
    JM-->>CP: AssignmentRoundStarted event

%% Job Execution Phase
    Note over CP,IT: 6. Job Execution
    CP->>JM: confirmJob(jobId)
    JM->>NM: validateNodeOwner(jobId, msg.sender)
    JM-->>CP: JobConfirmed event
    CP->>JM: completeJob(jobId)
    JM-->>CP: JobCompleted event

%% Payment & Rewards Phase
    Note over CP,IT: 7. Payment & Rewards
    CP->>JM: processPayment(jobId)
    JM->>JE: releasePayment(from, to, amount)
    JE-->>CP: PaymentReleased event

    IM->>IT: distributeReward(cp, amount, "Secret revelation reward")
    IT-->>CP: RewardDistributed event

%% Penalties (if applicable)
    Note over CP,IT: 8. Penalties (if applicable)
    IM->>IT: applyPenalty(cp, amount, reason)
    IT->>NE: applyPenalty(cp, amount)
    NE-->>CP: PenaltyApplied event